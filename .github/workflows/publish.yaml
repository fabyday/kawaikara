name: Release

on:
  push:
    branches: 
      - main
    tags :
      - v*

jobs:
  warm-up-cache-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo running on branch $GITHUB_REF
      - uses: actions/setup-node@v2
        with:
          node-version: "21.4.0"

      

   
      # yarn setup
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

  warm-up-cache-mac:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v2
      - run: echo running on branch $GITHUB_REF
      - uses: actions/setup-node@v2
        with:
          node-version: "21.4.0"

      

   
      # yarn setup
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile






  
  # GENERAL electron packaging
  electron-package-mac:
    needs: [warm-up-cache-mac]
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v2
      - run: echo running on branch $GITHUB_REF

      - uses: actions/setup-node@v2
        with:
          node-version: "21.4.0"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id : setup-python
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install dependencies
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile 
      - name: Install dependencies yarn
        run: cd react_src && yarn install --frozen-lockfile

      - name : test
        run : sh ./scripts/reauth.sh
        env : 
          ACCOUNT : ${{secrets.ACCOUNT}}
          PASSWORD : ${{secrets.PASSWD}}

      - name: Build electron package
        run: yarn release
        env :
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK : ${{secrets.SELF_SIGNED_CERT_FOR_MAC}}
          DISCORD_APP_ID: ${{secrets.DISCORD_APP_ID}}
          DISCORD_PUB_KEY: ${{secrets.DISCORD_PUB_KEY}}


  




  
  # GENERAL electron packaging
  electron-package-win:
    needs: [warm-up-cache-win]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo running on branch $GITHUB_REF

      - uses: actions/setup-node@v2
        with:
          node-version: "21.4.0"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id : setup-python
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install dependencies
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile 
      - name: Install dependencies yarn
        run: cd react_src && yarn install --frozen-lockfile

      - name : test
        run : powershell.exe ./scripts/reauth.ps1
        env : 
          ACCOUNT : ${{secrets.ACCOUNT}}
          PASSWORD : ${{secrets.PASSWD}}

      - name: Build electron package
        run: yarn release
        env :
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK : ${{secrets.SELF_SIGNED_CERT}}
          DISCORD_APP_ID: ${{secrets.DISCORD_APP_ID}}
          DISCORD_PUB_KEY: ${{secrets.DISCORD_PUB_KEY}}


  